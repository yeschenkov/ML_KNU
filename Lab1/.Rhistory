compl <- 1+1i
int
class(int)
double
class(double)
bool
class(bool)
char
class(char)
compl
class(compl)
## Створити вектори, які: містить послідовність з 5 до 75; містить числа 3.14,
## 2.71, 0, 13; 100 значень TRUE.
first <- c(5:75)
second <- c(3.14, 2.71, 0, 13)
third <- as.logical(c(1:100))
first
second
third
## Створити наступну матрицю за допомогою matrix, та за допомогою cbind або rbind
matrix_vector <- c(0.5, 3.9,0,2,1.3,131,2.2, 7,3.5,2.8,4.6,5.1)
first_matrix <- matrix(matrix_vector, ncol=3)
first_matrix
## method 2
first_row <- c(0.5, 1.3, 3.5)
second_row <- c(3.9,131,2.8)
third_row <- c(0,2.2,4.6)
fourth_row <- c(2,7,5.1)
second_matrix <- rbind(first_row,second_row,third_row,fourth_row)
second_matrix
## 4. Створити довільний список (list), в який включити всі базові типи.
lst <- list("a", TRUE, 5L, 1.3, 1i)
lst
## 5. Створити фактор з трьома рівнями «baby», «child», «adult».
fctr <- factor(levels = c("baby", "child", "adult"))
fctr
## 6. Знайти індекс першого значення NA в векторі 1, 2, 3, 4, NA, 6, 7, NA, 9, NA, 11. Знайти кількість значень NA.
vctr <- c(1, 2, 3, 4, NA, 6, 7, NA, 9, NA, 11)
na_first_position <- min(which(is.na(vctr)))
na_count <- sum(is.na(vctr))
na_first_position
na_count
## 7. Створити довільний data frame та вивести в консоль.
data_frame <- data.frame(first =(1:3), second=c(1i,2i,3i))
data_frame
## 8. Змінити імена стовпців цього data frame.
colnames(data_frame) <- c("numeric", "complex")
data_frame
## Створити змінні базових (atomic) типів
int <- 1L
double <- 2.5
bool <- TRUE
char <- "a"
compl <- 1+1i
int
class(int)
double
class(double)
bool
class(bool)
char
class(char)
compl
class(compl)
## Створити вектори, які: містить послідовність з 5 до 75; містить числа 3.14,
## 2.71, 0, 13; 100 значень TRUE.
first <- c(5:75)
second <- c(3.14, 2.71, 0, 13)
third <- as.logical(c(1:100))
first
second
third
## Створити наступну матрицю за допомогою matrix, та за допомогою cbind або rbind
matrix_vector <- c(0.5, 3.9,0,2,1.3,131,2.2, 7,3.5,2.8,4.6,5.1)
first_matrix <- matrix(matrix_vector, ncol=3)
first_matrix
## method 2
first_row <- c(0.5, 1.3, 3.5)
second_row <- c(3.9,131,2.8)
third_row <- c(0,2.2,4.6)
fourth_row <- c(2,7,5.1)
second_matrix <- rbind(first_row,second_row,third_row,fourth_row)
second_matrix
## 4. Створити довільний список (list), в який включити всі базові типи.
lst <- list("a", TRUE, 5L, 1.3, 1i)
lst
## 5. Створити фактор з трьома рівнями «baby», «child», «adult».
fctr <- factor(levels = c("baby", "child", "adult"))
fctr
## 6. Знайти індекс першого значення NA в векторі 1, 2, 3, 4, NA, 6, 7, NA, 9, NA, 11. Знайти кількість значень NA.
vctr <- c(1, 2, 3, 4, NA, 6, 7, NA, 9, NA, 11)
na_first_position <- min(which(is.na(vctr)))
na_count <- sum(is.na(vctr))
na_first_position
na_count
## 7. Створити довільний data frame та вивести в консоль.
data_frame <- data.frame(first =(1:3), second=c(1i,2i,3i))
data_frame
## 8. Змінити імена стовпців цього data frame.
colnames(data_frame) <- c("numeric", "complex")
data_frame
## Створити змінні базових (atomic) типів
int <- 1L
double <- 2.5
bool <- TRUE
char <- "a"
compl <- 1+1i
int
class(int)
double
class(double)
bool
class(bool)
char
class(char)
compl
class(compl)
## Створити вектори, які: містить послідовність з 5 до 75; містить числа 3.14,
## 2.71, 0, 13; 100 значень TRUE.
first <- c(5:75)
second <- c(3.14, 2.71, 0, 13)
third <- as.logical(c(1:100))
first
second
third
## Створити наступну матрицю за допомогою matrix, та за допомогою cbind або rbind
matrix_vector <- c(0.5, 3.9,0,2,1.3,131,2.2, 7,3.5,2.8,4.6,5.1)
first_matrix <- matrix(matrix_vector, ncol=3)
first_matrix
## method 2
first_row <- c(0.5, 1.3, 3.5)
second_row <- c(3.9,131,2.8)
third_row <- c(0,2.2,4.6)
fourth_row <- c(2,7,5.1)
second_matrix <- rbind(first_row,second_row,third_row,fourth_row)
second_matrix
## 4. Створити довільний список (list), в який включити всі базові типи.
lst <- list("a", TRUE, 5L, 1.3, 1i)
lst
## 5. Створити фактор з трьома рівнями «baby», «child», «adult».
fctr <- factor(levels = c("baby", "child", "adult"))
fctr
## 6. Знайти індекс першого значення NA в векторі 1, 2, 3, 4, NA, 6, 7, NA, 9, NA, 11. Знайти кількість значень NA.
vctr <- c(1, 2, 3, 4, NA, 6, 7, NA, 9, NA, 11)
na_first_position <- min(which(is.na(vctr)))
na_count <- sum(is.na(vctr))
na_first_position
na_count
## 7. Створити довільний data frame та вивести в консоль.
data_frame <- data.frame(first =(1:3), second=c(1i,2i,3i))
data_frame
## 8. Змінити імена стовпців цього data frame.
colnames(data_frame) <- c("numeric", "complex")
data_frame
## Створити змінні базових (atomic) типів
int <- 1L
double <- 2.5
bool <- TRUE
char <- "a"
compl <- 1+1i
int
class(int)
double
class(double)
bool
class(bool)
char
class(char)
compl
class(compl)
## Створити вектори, які: містить послідовність з 5 до 75; містить числа 3.14,
## 2.71, 0, 13; 100 значень TRUE.
first <- c(5:75)
second <- c(3.14, 2.71, 0, 13)
third <- as.logical(c(1:100))
first
second
third
## Створити наступну матрицю за допомогою matrix, та за допомогою cbind або rbind
matrix_vector <- c(0.5, 3.9,0,2,1.3,131,2.2, 7,3.5,2.8,4.6,5.1)
first_matrix <- matrix(matrix_vector, ncol=3)
first_matrix
## method 2
first_row <- c(0.5, 1.3, 3.5)
second_row <- c(3.9,131,2.8)
third_row <- c(0,2.2,4.6)
fourth_row <- c(2,7,5.1)
second_matrix <- rbind(first_row,second_row,third_row,fourth_row)
second_matrix
## 4. Створити довільний список (list), в який включити всі базові типи.
lst <- list("a", TRUE, 5L, 1.3, 1i)
lst
## 5. Створити фактор з трьома рівнями «baby», «child», «adult».
fctr <- factor(levels = c("baby", "child", "adult"))
fctr
## 6. Знайти індекс першого значення NA в векторі 1, 2, 3, 4, NA, 6, 7, NA, 9, NA, 11. Знайти кількість значень NA.
vctr <- c(1, 2, 3, 4, NA, 6, 7, NA, 9, NA, 11)
na_first_position <- min(which(is.na(vctr)))
na_count <- sum(is.na(vctr))
na_first_position
na_count
## 7. Створити довільний data frame та вивести в консоль.
data_frame <- data.frame(first =(1:3), second=c(1i,2i,3i))
data_frame
## 8. Змінити імена стовпців цього data frame.
colnames(data_frame) <- c("numeric", "complex")
data_frame
install.packages("knitr")
knitr::stitch('Lab1.R')
knitr::stitch('C:/Users/v.yeshchenkov/Documents/RLabs/Lab1.R')
install.packages("tinytex")
knitr::stitch('C:/Users/v.yeshchenkov/Documents/RLabs/Lab1.R')
tinytex::install_tinytex()
knitr::stitch('C:/Users/v.yeshchenkov/Documents/RLabs/Lab1.R')
knitr::stitch('C:/Users/v.yeshchenkov/Documents/RLabs/Lab1.R')
yy
rmarkdown::render("C:/Users/v.yeshchenkov/Documents/RLabs/Lab1.R", "html_document")
rmarkdown::render("C:/Users/v.yeshchenkov/Documents/RLabs/Lab2.R", "html_document")
rmarkdown::render("C:/Users/v.yeshchenkov/Documents/RLabs/Lab3.R", "html_document")
rmarkdown::render("C:/Users/v.yeshchenkov/Documents/RLabs/Lab4.R", "html_document")
rmarkdown::render("C:/Users/v.yeshchenkov/Documents/RLabs/Lab5.R", "html_document")
rmarkdown::render("C:/Users/v.yeshchenkov/Documents/RLabs/Lab6.R", "html_document")
rmarkdown::render("C:/Users/v.yeshchenkov/Documents/RLabs/Lab1.R", "pdf_document")
rmarkdown::render("C:/Users/v.yeshchenkov/Documents/RLabs/Lab1.R", "github_document")
rmarkdown::render("C:/Users/v.yeshchenkov/Documents/RLabs/Lab1.R", "github_document")
rmarkdown::render("C:/Users/v.yeshchenkov/Documents/RLabs/Lab2.R", "github_document")
rmarkdown::render("C:/Users/v.yeshchenkov/Documents/RLabs/Lab3.R", "github_document")
rmarkdown::render("C:/Users/v.yeshchenkov/Documents/RLabs/Lab4.R", "github_document")
rmarkdown::render("C:/Users/v.yeshchenkov/Documents/RLabs/Lab5.R", "github_document")
rmarkdown::render("C:/Users/v.yeshchenkov/Documents/RLabs/Lab6.R", "github_document")
tmp = tempfile()
df <- read.csv(file = 'Auto_Insurance_Claims_Sample.csv')
head(file)
cleandf <- drop_na(df)
library(dplyr)
library(tidyr)
cleandf <- drop_na(df)
cor(cleandf)
corr(cleandf)
dataframe <- read.table('Auto_Insurance_Claims_Sample.csv', header = FALSE);
tmp = tempfile()
url <- 'Auto_Insurance_Claims_Sample.csv'
download.file(url = url, mode="wb", destfile = tmp)
dataframe <- read.table('Auto_Insurance_Claims_Sample.csv', header = FALSE);
mat <- matrix(rnorm(50), nrow = 5)
mat
mat <- matrix(rnorm(50), ncol = 5)
mat
apply(matrx, 2, max)
apply(matrx, 2, mean)
apply(matrx, 1, min)
mat <- matrix(rnorm(50), ncol = 5)
mat
apply(mat, 2, max)
apply(mat, 2, mean)
apply(mat, 1, min)
sorted_mat <- apply(mat, 2, sort, decreasing = F)
sorted_mat
neg_num_count <- function(x) {
return(sum(x < 0))
}
apply(mat, 2, neg_num_count)
return(any(x>2))
any_el_greater_two <- function (x) {
return(any(x>2))
}
apply(mat, 2, any_el_greater_two)
list1 <- list(observationA = c(1:5, 7:3), observationB = matrix(1:6, nrow=2))
lapply(list1, sum)
lapply(list1, range)
sapply(list1, range)
split_insects <- split(InsectSprays$count,InsectSprays$spray)
lapply(split_insects, mean)
library("readxl")
tmp = tempfile(fileext = ".xls")
url <- 'https://data.gov.ua/dataset/175386f8-fbce-4352-8ec9-44fc8c436aa9/resource/e58e005a-c448-4d97-9d45-813f05b1d737/download/nabir-2020-2022-roki.xls'
download.file(url = url, mode="wb", destfile = tmp)
d <- read_excel(tmp,1,col_names = TRUE)
d <- as.data.frame(d)
head(d, 6)
csvTmp <- tempfile()
csvurl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv'
download.file(csvurl, destfile = csvTmp)
length(which(csvFrame$VAL == 24))
csvTmp <- tempfile()
csvurl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv'
download.file(csvurl, destfile = csvTmp)
csvFrame <- read.csv(csvTmp)
length(which(csvFrame$VAL == 24))
require(XML)
xmltmp <- tempfile()
xmlurl <- 'http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml'
download.file(xmlurl, xmltmp)
data <- xmlTreeParse(xmltmp, useInternalNodes = TRUE )
rootnode <- xmlRoot(data)
zipcode<-xpathSApply(rootnode,"//zipcode",xmlValue)
sum(zipcode == 21231)
filetmp <- tempfile()
download.file(url="https://dcc.ligo.org/public/0146/P1700337/001/H-H1_LOSC_C00_4_V1-1187006834-4096.hdf5", destfile = filetmp, mode="wb")
library("rhdf5")
h5ls(filetmp)
strain <- h5read(filetmp, "strain/Strain")
H5close()
st <- h5readAttributes(filetmp, "/strain/Strain")$Xspacing
st
gpsStart <- h5read(filetmp, "meta/GPSstart")
duration <- h5read(filetmp, "meta/Duration")
gpsEnd <- gpsStart + duration
myTime <- seq(gpsStart, gpsEnd, st)
numSamples <- 1000000
plot(myTime[0:numSamples],
strain[0:numSamples], type = "l", xlab = "GPS Time (s)", ylab = "H1 Strain")
## Зчитування html сторінки
library("rvest")
htmlpage <- read_html("http://www.imdb.com/search/title?count=100&release_date=2019,2019&title_type=feature")
html <- html_nodes(htmlpage,'.text-primary')
rank <- as.numeric(html_text(html))
title_html <- html_nodes(htmlpage,'.lister-item-header a')
title <- html_text(title_html)
runtime_html <- html_nodes(htmlpage,'.text-muted .runtime')
runtime <- html_text(runtime_html)
runtime <- as.numeric(gsub(" min", "", runtime))
movies <- data.frame(Rank = rank, Title = title, Runtime = runtime, stringsAsFactors = FALSE )
head(movies$Title)
movies[movies$Runtime > 120, ]$Title
length(which(movies$Runtime < 100))
rmarkdown::render("C:/Users/v.yeshchenkov/Documents/Courses/Search_MethodsCourse/Lab1/Lab1.R", "github_document")
rmarkdown::render("C:/Users/v.yeshchenkov/Documents/Courses/Search_MethodsCourse/Lab2/Lab2.R", "github_document")
rmarkdown::render("C:/Users/v.yeshchenkov/Documents/Courses/Search_MethodsCourse/Lab3/Lab3.R", "github_document")
rmarkdown::render("C:/Users/v.yeshchenkov/Documents/Courses/Search_MethodsCourse/Lab4/Lab4.R", "github_document")
rmarkdown::render("C:/Users/v.yeshchenkov/Documents/Courses/Search_MethodsCourse/Lab5/Lab5.R", "github_document")
NEI <- readRDS("summarySCC_PM25.rds")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
setwd('C:\Users\v.yeshchenkov\Documents\Courses\Machine Learning\Lab1')
NEI <- readRDS("summarySCC_PM25.rds")
setwd("C:\Users\v.yeshchenkov\Documents\Courses\Machine Learning\Lab1")
NEI <- readRDS("summarySCC_PM25.rds")
setwd("C:/Users/v.yeshchenkov/Documents/Courses/Machine Learning/Lab1")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
setwd("C:/Users/v.yeshchenkov/Documents/Courses/Machine Learning/Lab1")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
View(NEI)
View(SCC)
```
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
```
## Questions
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
```
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
```
## Questions
```
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
```
## Questions
total_emmisions <- aggregate(Emissions ~ year, NEI, sum)
head(total_emmisions)
barplot(total_emmisions$Emissions,names.arg = total_emmisions$year, xlab = "Year", ylab = "Total Emissions")
barplot(total_emmisions$Emissions/10^6,names.arg = total_emmisions$year, xlab = "Year", ylab = "Total Emissions")
barplot(total_emmisions$Emissions,names.arg = total_emmisions$year, xlab = "Year", ylab = "Total Emissions")
1. Have total emissions from PM2.5 decreased in the United States from 1999 to 2008? Make a plot showing the **total** PM2.5 emission from all sources for each of the years 1999, 2002, 2005, and 2008.
```
total_emmisions <- aggregate(Emissions ~ year, NEI, sum)
head(total_emmisions)
barplot(total_emmisions$Emissions,names.arg = total_emmisions$year, xlab = "Year", ylab = "Total Emissions")
```
2. Have total emissions from PM2.5 decreased in the **Baltimore City**, Maryland (`fips == "24510"`) from 1999 to 2008?
3. Of the four types of sources indicated by the `type` (point, nonpoint, onroad, nonroad) variable, which of these four sources have seen decreases in emissions from 1999–2008 for **Baltimore City**? Which have seen increases in emissions from 1999–2008?
4. Across the United States, how have emissions from coal combustion-related sources changed from 1999–2008?
5. How have emissions from motor vehicle sources changed from 1999–2008 in **Baltimore City** (EI.Sector starts from "Mobile")?
6. Compare emissions from motor vehicle sources in Baltimore City with emissions from motor vehicle sources in **Los Angeles County**, California (`fips == "06037"`). Which city has seen greater changes over time in motor vehicle emissions?
1. Have total emissions from PM2.5 decreased in the United States from 1999 to 2008? Make a plot showing the **total** PM2.5 emission from all sources for each of the years 1999, 2002, 2005, and 2008.
```
total_emmisions <- aggregate(Emissions ~ year, NEI, sum)
head(total_emmisions)
1. Have total emissions from PM2.5 decreased in the United States from 1999 to 2008? Make a plot showing the **total** PM2.5 emission from all sources for each of the years 1999, 2002, 2005, and 2008.
```
total_emmisions <- aggregate(Emissions ~ year, NEI, sum)
head(total_emmisions)
```{r}
total_emmisions <- aggregate(Emissions ~ year, NEI, sum)
head(total_emmisions)
barplot(total_emmisions$Emissions,names.arg = total_emmisions$year, xlab = "Year", ylab = "Total Emissions")
emissions_balt <- NEI[NEI$fips=="24510"]
total_emissions_balt <- aggregate(Emissions ~ year, emissions_balt, sum)
emissions_balt <- NEI[NEI$fips=="24510"]
total_emissions_balt <- aggregate(Emissions ~ year, emissions_balt, sum)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
total_emissions <- aggregate(Emissions ~ year, NEI, sum)
head(total_emissions)
barplot(total_emissions$Emissions,names.arg = total_emmisions$year, xlab = "Year", ylab = "Total Emissions")
emissions_balt <- NEI[NEI$fips=="24510"]
total_emissions_balt <- aggregate(Emissions ~ year, emissions_balt, sum)
barplot(total_emissions_balt$Emissions, names.arg = total_emissions_balt$year, xlab = "Year", ylab = "Total Emissions")
emissions_balt <- NEI[NEI$fips=="24510",]
total_emissions_balt <- aggregate(Emissions ~ year, emissions_balt, sum)
barplot(total_emissions_balt$Emissions, names.arg = total_emissions_balt$year, xlab = "Year", ylab = "Total Emissions")
total_emissions <- aggregate(Emissions ~ year, NEI, sum)
head(total_emissions)
barplot(total_emissions$Emissions,names.arg = total_emmisions$year, xlab = "Year", ylab = "Total Emissions")
emissions_balt <- NEI[NEI$fips=="24510",]
total_emissions_balt <- aggregate(Emissions ~ year, emissions_balt, sum)
barplot(total_emissions_balt$Emissions, names.arg = total_emissions_balt$year, xlab = "Year", ylab = "Total Emissions")
library(ggplot2)
ggplotBaltimore <- ggplot(emissionsForFips24510,
aes(factor(year),Emissions,fill=type)) + geom_bar(stat="identity") + theme_bw() + guides() + facet_grid(.~type,scales = "free",space="free") + labs(x="year", y=expression("Total Emission")) + labs(title=expression("Emissions in Baltimore City"))
ggplotBaltimore <- ggplot(emissions_balt,
aes(factor(year),Emissions,fill=type)) + geom_bar(stat="identity") + theme_bw() + guides() + facet_grid(.~type,scales = "free",space="free") + labs(x="year", y=expression("Total Emission")) + labs(title=expression("Emissions in Baltimore City"))
print(ggplotBaltimore)
combustRel <- grepl("comb", SCC$SCC.Level.One, ignore.case=TRUE)
coalRel <- grepl("coal", SCC$SCC.Level.Four, ignore.case=TRUE)
coalCombust <- (combustionRelated & coalRelated)
combustRel <- grepl("comb", SCC$SCC.Level.One, ignore.case=TRUE)
coalRel <- grepl("coal", SCC$SCC.Level.Four, ignore.case=TRUE)
coalCombust <- (combustRel & coalRel)
coalCombust <- (combustRel & coalRel)
combustSCC <- SCC[coalCombust,]$SCC
combustNEI <- NEI[NEI$SCC %in% combustSCC,]
ggp <- ggplot(combustNEI,aes(factor(year),Emissions/10^5)) +
geom_bar(stat="identity",fill="grey",width=0.75) +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Coal Combustion Source Emissions Across US from 1999-2008"))
print(ggp)
ggp <- ggplot(combustNEI,aes(factor(year),Emissions/10^5)) +
geom_bar(stat="identity",fill="grey",width=0.75) +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM2.5 Emission (10^5 Tons)")) +
labs(title=expression("PM2.5 Coal Combustion Source Emissions Across US from 1999-2008"))
print(ggp)
ggp <- ggplot(combustNEI,aes(factor(year),Emissions)) +
geom_bar(stat="identity",fill="grey",width=0.75) +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM2.5 Emission")) +
labs(title=expression("PM2.5 Coal Combustion Source Emissions Across US from 1999-2008"))
print(ggp)
vehicles <- grepl("vehicle", SCC$SCC.Level.Two, ignore.case=TRUE)
vehiclesSCC <- SCC[vehicles,]$SCC
vehiclesNEI <- NEI[NEI$SCC %in% vehiclesSCC,]
baltimoreVehiclesNEI <- vehiclesNEI[vehiclesNEI$fips==24510,]
ggp <- ggplot(baltimoreVehiclesNEI,aes(factor(year),Emissions)) +
geom_bar(stat="identity",fill="grey",width=0.75) +
theme_bw() + guides(fill=FALSE) +
labs(x="year", y=expression("Total PM2.5 Emission")) +
labs(title=expression("PM2.5 Motor Vehicle Source Emissions in Baltimore from 1999-2008"))
print(ggpVehicles)
ggpVehicles <- ggplot(baltimoreVehiclesNEI,aes(factor(year),Emissions)) +
geom_bar(stat="identity",fill="grey",width=0.75) +
theme_bw() + guides(fill=FALSE) +
labs(x="year", y=expression("Total PM2.5 Emission")) +
labs(title=expression("PM2.5 Motor Vehicle Source Emissions in Baltimore from 1999-2008"))
print(ggpVehicles)
ggp <- ggplot(combustNEI,aes(factor(year),Emissions)) +
geom_bar(stat="identity") +
theme_bw() +  guides(fill=FALSE) +
labs(x="year", y=expression("Total PM2.5 Emission")) +
labs(title=expression("PM2.5 Coal Combustion Source Emissions Across US from 1999-2008"))
print(ggp)
ggpVehicles <- ggplot(baltimoreVehiclesNEI,aes(factor(year),Emissions)) +
geom_bar(stat="identity") +
theme_bw() + guides(fill=FALSE) +
labs(x="year", y=expression("Total PM2.5 Emission")) +
labs(title=expression("PM2.5 Motor Vehicle Source Emissions in Baltimore from 1999-2008"))
print(ggpVehicles)
ggp <- ggplot(bothNEI, aes(x=factor(year), y=Emissions, fill=city)) +
geom_bar(aes(fill=year),stat="identity") +
guides(fill=FALSE) + theme_bw() +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (Kilo-Tons)")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore & LA, 1999-2008"))
vehiclesBaltNEI <- vehiclesNEI[vehiclesNEI$fips == 24510,]
vehiclesBaltNEI$city <- "Baltimore City"
vehiclesLANEI <- vehiclesNEI[vehiclesNEI$fips=="06037",]
vehiclesLANEI$city <- "Los Angeles County"
bothNEI <- rbind(vehiclesBaltimoreNEI,vehiclesLANEI)
bothNEI <- rbind(vehiclesBaltNEI,vehiclesLANEI)
ggp <- ggplot(bothNEI, aes(x=factor(year), y=Emissions, fill=city)) +
geom_bar(aes(fill=year),stat="identity") +
guides(fill=FALSE) + theme_bw() +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (Kilo-Tons)")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore & LA, 1999-2008"))
ggpBaltLA <- ggplot(bothNEI, aes(x=factor(year), y=Emissions, fill=city)) +
geom_bar(aes(fill=year),stat="identity") +
guides(fill=FALSE) + theme_bw() +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (Kilo-Tons)")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore & LA, 1999-2008"))
print(ggpBaltLA)
ggpBaltLA <- ggplot(bothNEI, aes(x=factor(year), y=Emissions, fill=city)) +
geom_bar(aes(fill=year),stat="identity") +
facet_grid(scales="free", space="free", .~city) +
guides(fill=FALSE) + theme_bw() +
labs(x="year", y=expression("Total PM2.5 Emission (Kilo-Tons)")) +
labs(title=expression("PM2.5 Motor Vehicle Source Emissions in Baltimore and LA"))
print(ggpBaltLA)
total_emissions <- aggregate(Emissions ~ year, NEI, sum)
total_emissions <- aggregate(Emissions ~ year, NEI, sum)
head(total_emissions)
barplot(total_emissions$Emissions,names.arg = total_emmisions$year, xlab = "Year", ylab = "Total Emissions")
emissions_balt <- NEI[NEI$fips=="24510",]
total_emissions_balt <- aggregate(Emissions ~ year, emissions_balt, sum)
barplot(total_emissions_balt$Emissions, names.arg = total_emissions_balt$year, xlab = "Year", ylab = "Total Emissions")
library(ggplot2)
ggplotBaltimore <- ggplot(emissions_balt, aes(factor(year),Emissions,fill=type)) + geom_bar(stat="identity") + theme_bw() + guides() + facet_grid(.~type,scales = "free",space="free") + labs(x="year", y=expression("Total Emission")) + labs(title=expression("Emissions in Baltimore City"))
print(ggplotBaltimore)
